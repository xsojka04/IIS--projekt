@using IISprojekt3.Data.IisDbContext;
@using IISprojekt3.Helpers;

@inject IisdbContext IisdbContext;

<h3>Asistenti</h3>

@if (IsLoading)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    if (Asistents.Count == 0)
    {
        <p>
            <b>Seznam je prázdný</b>
        </p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Jméno
                    </th>
                    <th>
                        Stav
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var asistent in Asistents)
                {
                <tr>
                    <td>
                        @asistent.IdAsistentNavigation.Name
                    </td>
                    <td>
                        @(StateToString(asistent))
                    </td>
                    <td class="text-center">
                        <a href="" @onclick="() => Delete(asistent)" @onclick:preventDefault>Odstranit</a>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    }
}

@code {
  [Parameter]
  public int AssignmentId { get; set; }
  public bool IsLoading { get; set; } = true;
  public List<BindAsistentAssignment> Asistents { get; set; } = new List<BindAsistentAssignment>();

  protected override async Task OnInitializedAsync()
  {
      await Task.Run(() => LoadTestsAsync());
  }

  private void LoadTestsAsync()
  {
      Asistents = IisdbContext.BindAsistentAssignment.Where(x => x.IdAssignment == AssignmentId).ToList();
      var users = IisdbContext.User.ToList();

      foreach (var asistent in Asistents)
      {
          asistent.IdAsistentNavigation = users.FirstOrDefault(x => x.Id == asistent.IdAsistent);
      }

      IsLoading = false;
  }

  private void Delete(BindAsistentAssignment asistent)
  {
      var tmp = IisdbContext.BindAsistentAssignment.FirstOrDefault(x => x.IdAsistent == asistent.IdAsistent && x.IdAssignment == asistent.IdAssignment);
      IisdbContext.BindAsistentAssignment.Remove(tmp);
      IisdbContext.SaveChanges();

      LoadTestsAsync();
  }

  public string StateToString(BindAsistentAssignment bind)
  {
      if (bind.ApprovedBy is null)
          return "Nevyřízeno";
      else if (bind.IsApproved == 0)
          return "Odmítnuto";
      else
          return "Schváleno";
  }
}