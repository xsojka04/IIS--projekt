@using IISprojekt3.Data.IisDbContext;
@using IISprojekt3.Helpers;

@inject IisdbContext IisdbContext;

<h3>Studenti</h3>

@if (IsLoading)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    if (Tests.Count == 0)
    {
        <p>
            <b>Seznam je prázdný</b>
        </p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Jméno
                    </th>
                    <th>
                        Stav
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var test in Tests)
                {
                    <tr>
                        <td>
                            @test.AuthorNavigation.Name
                        </td>
                        <td>
                            @(((ETestState)test.State).ToUserFriendlyString())
                        </td>
                        <td class="text-center">
                            <a href="" @onclick="() => Delete(test)" @onclick:preventDefault>Odstranit</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
  [Parameter]
  public int AssignmentId { get; set; }
  public bool IsLoading { get; set; } = true;
  public List<Test> Tests { get; set; } = new List<Test>();

  protected override async Task OnInitializedAsync()
  {
      await Task.Run(() => LoadTestsAsync());
      await base.OnInitializedAsync();
  }

  private void LoadTestsAsync()
  {
      Tests = IisdbContext.Test.Where(x => x.IdAssignment == AssignmentId).ToList();
      var users = IisdbContext.User.ToList();

      foreach (var test in Tests)
      {
          test.AuthorNavigation = users.FirstOrDefault(x => x.Id == test.Author);
      }

      IsLoading = false;
  }

  private void Delete(Test test)
  {
      var tmp = IisdbContext.Test.FirstOrDefault(x => x.Id == test.Id);
      IisdbContext.Test.Remove(tmp);
      IisdbContext.SaveChanges();

      LoadTestsAsync();
  }
}
